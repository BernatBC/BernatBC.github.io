<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Telegram on BernatBC</title><link>https://www.bernatbc.tk/tags/telegram/</link><description>Recent content in Telegram on BernatBC</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 13 Jun 2023 06:00:23 +0600</lastBuildDate><atom:link href="https://www.bernatbc.tk/tags/telegram/index.xml" rel="self" type="application/rss+xml"/><item><title>Î»-Calculus Telegram Bot</title><link>https://www.bernatbc.tk/posts/education/lambdacalculustelegrambot/</link><pubDate>Tue, 13 Jun 2023 06:00:23 +0600</pubDate><guid>https://www.bernatbc.tk/posts/education/lambdacalculustelegrambot/</guid><description>&lt;h2 id="the-statement">The statement&lt;/h2>
&lt;p>We were asked to make a lambda-calculus interpreter created by
&lt;a href="https://en.wikipedia.org/wiki/Alonzo_Church" target="_blank" rel="noopener">Alonzo Church&lt;/a>. This interpreter had also to support the definition and use of macros, a variable name for another expression. Those macros had to be evaluated in an infix (if it&amp;rsquo;s a symbol) or a prefix mode (otherwise). On top of that, our interpreter had to run in a
&lt;a href="https://telegram.org/" target="_blank" rel="noopener">Telegram&lt;/a> chat. Finally, we had to add the capability to print our expression as a tree in an image.&lt;/p></description></item></channel></rss>