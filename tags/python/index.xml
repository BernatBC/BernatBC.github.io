<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on BernatBC</title><link>https://www.bernatbc.tk/tags/python/</link><description>Recent content in Python on BernatBC</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 23 Jun 2023 06:00:23 +0600</lastBuildDate><atom:link href="https://www.bernatbc.tk/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Object Tracker</title><link>https://www.bernatbc.tk/posts/education/objecttracker/</link><pubDate>Fri, 23 Jun 2023 06:00:23 +0600</pubDate><guid>https://www.bernatbc.tk/posts/education/objecttracker/</guid><description>The statement Long-Term Visual Object Tracking Benchmark is a dataset to benchmark object tracking algorithms. We were asked to implement four different algorithms. Two using tracking techniques, and two using recognition. For each technique, we had to implement one from scratch (an algorithm made for us) and another one extracted from the internet.
Given a series of frames and a bounding box corresponding to the object to track, the algorithm should follow the object.</description></item><item><title>Î»-Calculus Telegram Bot</title><link>https://www.bernatbc.tk/posts/education/lambdacalculustelegrambot/</link><pubDate>Tue, 13 Jun 2023 06:00:23 +0600</pubDate><guid>https://www.bernatbc.tk/posts/education/lambdacalculustelegrambot/</guid><description>The statement We were asked to make a lambda-calculus interpreter created by Alonzo Church. This interpreter had also to support the definition and use of macros, a variable name for another expression. Those macros had to be evaluated in an infix (if it&amp;rsquo;s a symbol) or a prefix mode (otherwise). On top of that, our interpreter had to run in a Telegram chat. Finally, we had to add the capability to print our expression as a tree in an image.</description></item></channel></rss>